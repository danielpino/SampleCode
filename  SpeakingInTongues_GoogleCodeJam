package code;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;

public class MainObject {

  /*
   * Problem
	 * 
	 * We have come up with the best possible language here at Google, called
	 * Googlerese. To translate text into Googlerese, we take any message and
	 * replace each English letter with another English letter. This mapping is
	 * one-to-one and onto, which means that the same input letter always gets
	 * replaced with the same output letter, and different input letters always
	 * get replaced with different output letters. A letter may be replaced by
	 * itself. Spaces are left as-is.
	 * 
	 * For example (and here is a hint!), our awesome translation algorithm
	 * includes the following three mappings: 'a' -> 'y', 'o' -> 'e', and 'z' ->
	 * 'q'. This means that "a zoo" will become "y qee".
	 * 
	 * Googlerese is based on the best possible replacement mapping, and we will
	 * never change it. It will always be the same. In every test case. We will
	 * not tell you the rest of our mapping because that would make the problem
	 * too easy, but there are a few examples below that may help.
	 * 
	 * Given some text in Googlerese, can you translate it to back to normal
	 * text?
	 */

	public static void main(String[] args) {
		ArrayList<String> outputMessage = new ArrayList<String>();
		ArrayList<String> inputMessage = new ArrayList<String>();
		int numCases = 0;

		// count and put inputs into array
		numCases = readInMessages(inputMessage, numCases);

		// logging block
		System.out.println("numCases: "+ numCases);
		System.out.println("inputMessage: "+ inputMessage.size());
		
		// loop through input array and encrypt
		for (int i = 0; i < numCases; i++) {
			outputMessage.add(runEncrypt(inputMessage.get(i)));
		}

		for (int i = 0; i < numCases; i++) {
			System.out
					.println("Case #" + (i + 1) + ": " + outputMessage.get(i));
			// System.out.println(i + inputMessage.get(i));
			// System.out.println(i + outputMessage.get(i));

		}
	}

	private static int readInMessages(ArrayList<String> inputMessage,
			int numCases) {
		// System.out.println("entered readInMessages");

		try {
			BufferedReader in = new BufferedReader(
					new FileReader(
							"C:/Users/Titan/workspace/GoogleCodeJam_SpeakingInTongues/src/A-small-practice.in"));

			String str;
			while ((str = in.readLine()) != null) {
				// System.out.println(str);
				if (numCases == 0) {
					numCases = Integer.parseInt(str);
				} else {
					inputMessage.add(str);
				}
			}
			in.close();
		} catch (IOException e) {
		}
		return numCases;
	}

	private static String runEncrypt(String oldString) {
		String newString = "";
		// System.out.println(oldString);

		// loop through characters and send to switchboard encrypt/decrypt
		for (int j = 0; j < oldString.length(); j++) {
			String oldChar = oldString.substring(j, j + 1);
			String newChar = decryptChar(oldChar);
			//String newChar = encryptChar(oldChar);
			newString = newString + newChar;
		}

		// System.out.println(newString);
		return newString;
	}

	private static String encryptChar(String oldChar) {
		String newChar = "";

		if (oldChar.contentEquals("a"))
			newChar = "y";
		else if (oldChar.contentEquals("b"))
			newChar = "n";
		else if (oldChar.contentEquals("c"))
			newChar = "f";
		else if (oldChar.contentEquals("d"))
			newChar = "i";
		else if (oldChar.contentEquals("e"))
			newChar = "c";
		else if (oldChar.contentEquals("f"))
			newChar = "w";
		else if (oldChar.contentEquals("g"))
			newChar = "l";
		else if (oldChar.contentEquals("h"))
			newChar = "b";
		else if (oldChar.contentEquals("i"))
			newChar = "k";
		else if (oldChar.contentEquals("j"))
			newChar = "u";
		else if (oldChar.contentEquals("k"))
			newChar = "o";
		else if (oldChar.contentEquals("l"))
			newChar = "m";
		else if (oldChar.contentEquals("m"))
			newChar = "x";
		else if (oldChar.contentEquals("n"))
			newChar = "s";
		else if (oldChar.contentEquals("o"))
			newChar = "e";
		else if (oldChar.contentEquals("p"))
			newChar = "v";
		else if (oldChar.contentEquals("q"))
			newChar = "z";
		else if (oldChar.contentEquals("r"))
			newChar = "p";
		else if (oldChar.contentEquals("s"))
			newChar = "d";
		else if (oldChar.contentEquals("t"))
			newChar = "r";
		else if (oldChar.contentEquals("u"))
			newChar = "j";
		else if (oldChar.contentEquals("v"))
			newChar = "g";
		else if (oldChar.contentEquals("w"))
			newChar = "t";
		else if (oldChar.contentEquals("x"))
			newChar = "h";
		else if (oldChar.contentEquals("y"))
			newChar = "a";
		else if (oldChar.contentEquals("z"))
			newChar = "q";
		else if (oldChar.contentEquals(" "))
			newChar = " ";

		// System.out.println(oldChar +" -> "+newChar);
		return newChar;
	}

	private static String decryptChar(String oldChar) {
		String newChar = "";

		if (oldChar.contentEquals("y"))
			newChar = "a";
		else if (oldChar.contentEquals("n"))
			newChar = "b";
		else if (oldChar.contentEquals("f"))
			newChar = "c";
		else if (oldChar.contentEquals("i"))
			newChar = "d";
		else if (oldChar.contentEquals("c"))
			newChar = "e";
		else if (oldChar.contentEquals("w"))
			newChar = "f";
		else if (oldChar.contentEquals("l"))
			newChar = "g";
		else if (oldChar.contentEquals("b"))
			newChar = "h";
		else if (oldChar.contentEquals("k"))
			newChar = "i";
		else if (oldChar.contentEquals("u"))
			newChar = "j";
		else if (oldChar.contentEquals("o"))
			newChar = "k";
		else if (oldChar.contentEquals("m"))
			newChar = "l";
		else if (oldChar.contentEquals("x"))
			newChar = "m";
		else if (oldChar.contentEquals("s"))
			newChar = "n";
		else if (oldChar.contentEquals("e"))
			newChar = "o";
		else if (oldChar.contentEquals("v"))
			newChar = "p";
		else if (oldChar.contentEquals("z"))
			newChar = "q";
		else if (oldChar.contentEquals("p"))
			newChar = "r";
		else if (oldChar.contentEquals("d"))
			newChar = "s";
		else if (oldChar.contentEquals("r"))
			newChar = "t";
		else if (oldChar.contentEquals("j"))
			newChar = "u";
		else if (oldChar.contentEquals("g"))
			newChar = "v";
		else if (oldChar.contentEquals("t"))
			newChar = "w";
		else if (oldChar.contentEquals("h"))
			newChar = "x";
		else if (oldChar.contentEquals("a"))
			newChar = "y";
		else if (oldChar.contentEquals("q"))
			newChar = "z";
		else if (oldChar.contentEquals(" "))
			newChar = " ";

		// System.out.println(oldChar +" -> "+newChar);
		return newChar;
	}
}
